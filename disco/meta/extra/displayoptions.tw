:: DisplayOptions [nobr]
/* ordered list of options, included in the DisplayParagraph widget in the PassageFooter. you don't need to do anything else with this passage!


first line creates an ordered list
*/
<ol id="OptionList">
/* for each text (key) and passage (value) in $optionmap, capture those things.*/ 
<<for _optiontext, _optionpassage range $optionmap>>
  <<capture _optionpassage, _optiontext>>
  /*  
    args[0] = text for the option.
    args[1] = _optionspassage (an array)
    _optionspassage[0] = the passage that the option sends you to

    if it's simulating a check
    1 = skill
    2 = difficulty

    if it's got a flag attached
    3 = flag in $flagsArray

    --    
    
    if _optionpassage[1] (the skill indicating that the option is a check) exists, 
    rewrite _optiontext as [skill + difficulty label]
      ex: [Visual Calculus - Heroic]
    + _optiontext
    put the .check styling to a link with _optiontext as its text.
    sets the $lastoption variable, used in the PassageHeader passage, to _optiontext
  */

  <<if _optionpassage[1]>>
    <<set _skillname to _optionpassage[1].charAt(0).toUpperCase() + _optionpassage[1].slice(1);>>
    <<set _difficultylabel to _optionpassage[2].charAt(0).toUpperCase() + _optionpassage[2].slice(1);>>
    <<set _optiontext to " [" + _skillname + "- "  + _difficultylabel + "] - " + _optiontext>>
      @@.check;<li>-
        <<link _optiontext _optionpassage[0]>>
        <<set $lastoption to _optiontext>>
        <</link>>
      </li>@@
    /* otherwise just add the option styling */
  <<else>>
    @@.option;<li>-
      <<link _optiontext _optionpassage[0]>>
      <<set $lastoption to _optiontext>>
      <</link>>
    </li>@@
  <</if>>

  /* if there's a 3rd variable in the _optionspassage array  (indicating it's a flag setter) and it's in $flagsArray
  set the $flagsArray's variable to the value
  
   to have this trigger, you need to put empty values for arguments 1 and 2 (no skill check set)
  
    ex: <<AddOption "text" "Passage" "" "" "flag">>*/
  <<if _optionpassage[3]>>
      <<SetFlag _optionpassage[3]>>
  <</if>>

  <</capture>>
<</for>>
/* closing off ordered list and resetting $optionmap*/
</ol>
<<set $optionmap to new Map()>>