:: DisplayOptions [nobr]
/* ordered list of options, included in the DisplayParagraph widget in the PassageFooter. you don't need to do anything else with this passage!


first line creates an ordered list
*/
<ol id="OptionList">
/* for each text (key) and passage (value) in $optionmap, capture those things.*/ 
<<for _optiontext, _optionChecks range $optionmap>>
  <<capture _optionChecks, _optiontext>>
  /*  
    args[0] = text for the option.
    args[1] = _optionChecks (an array)

    within _optionChecks array:
      normally:
        0 = the passage that the option sends you to by default
        if there's a flag:
          1 = flag to set as true

      if it's making a check:
        0 = the passage that the option sends you to on a success
        1 = the passage that the option sends you to on a failure
        2 = skill
        3 = flag, what to set it to based on succcess, and what to set it to based on failure
        4 = difficulty rating
        5 = roll modifier
  */

  /* if _optionChecks[2] (the skill indicating that the option is a check) exists, */
  <<if _optionChecks[2]>>
    /* sets _skillname to the 1st argument, the skill, in uppercase.*/
    <<set _skillname = _optionChecks[2].toUpperCase()>>

    /*If the skill name is in the $motorics array, set _usedStat to the skill's appropriate stat for use with <<check>>. same with the others.*/
    <<if $motorics.includes(_skillname)>>
        <<set _usedStat = $stat.mot>>
    <<elseif $intellect.includes(_skillname)>>
        <<set _usedStat = $stat.int>>
    <<elseif $fysique.includes(_skillname)>>
        <<set _usedStat = $stat.fys>>
    <<elseif $psyche.includes(_skillname)>>
        <<set _usedStat = $stat.psy>>
    <</if>>

    /*  rewrite _optiontext as [skill + difficulty label] (capitalizing the skill name)
      ex: [Visual Calculus - Heroic] */
    <<set _skillname = _optionChecks[2].charAt(0).toUpperCase() + _optionChecks[2].slice(1).toLowerCase();>>

    /* add option text
    ex: [Visual Calculus - Heroic] - Do something heroic with Visual Calculus.*/

    <<set _difficultyRating = _optionChecks[4].charAt(0).toUpperCase() + _optionChecks[4].slice(1).toLowerCase()>>
    
    <<set _optiontext = " [" + _skillname + " - "  + _difficultyRating + "] - " + _optiontext>>

    /* put the .check styling to a link with _optiontext as its text. forwards you to the appropriate passage based on whether you succeeded or failed. sets the $lastoption variable, used in the PassageHeader passage, to _optiontext. */
      @@.check;<li>-
          <<link _optiontext>>
            <<set $lastoption = _optiontext>>
            <<Difficulties _difficultyRating>>
            <<check _rating _usedStat _optionChecks[5]>>
              <<if $success == true>>
                <<flag _optionChecks[3] true>>
                <<goto _optionChecks[0]>>
              <<elseif $success == false>>
                <<flag _optionChecks[3] false>>
                <<goto _optionChecks[1]>>
              <</if>>
          <</link>>
      </li>@@
  
  /* otherwise, if there's no check, just add the option styling */
  <<else>>
    @@.option;<li>-
      <<link _optiontext>>
        /* if there's a 2nd variable in the _optionChecks array (indicating it's a flag setter) and there's no check, set the $flagsMap's variable to the value
         ex: <<addoption "text" "Passage" "flag">> */
        <<if _optionChecks[1]>>
          <<flag _optionChecks[1] true>>
        <</if>>
        <<set $lastoption = _optiontext>>
        <<goto _optionChecks[0]>>
      <</link>>
    </li>@@
  <</if>>

  <</capture>>
<</for>>
/* closing off ordered list and resetting $optionmap*/
</ol>
<<set $optionmap = new Map()>>