:: PassiveSkill [widget nobr]
/* represents the dialogue of passive skills, a unique set speaker.

ex: <<PassiveSkill "Logic">>

<<PassiveSkill "Logic" "Easy" "This is so easy." "Wow guess it wasn't that easy...!" 3 $stats.int 0>>

after a passive check
<<PassiveSkill "Logic" 5 >>

args[0] = name of skill
if running a passive check:
    1 = success state
    2 = fail state
    3 = difficulty
    4 = stat
    5 = mod
if after a passive check: 
    1 = difficulty
    2 = success or fail
*/
<<widget "PassiveSkill">>
    /* sets _skillname to the first argument, the skill, in lowercase. sets _skillresult as empty */
    <<set _skillname to ($args[0].toLowerCase())>>
    <<set _skillresult to "">>
    /*If the skill name is in the $motorics array, set $currentspeaker to the skill, styling it with the .motorics and .speaker classes. same with the others. */
    <<if $motorics.includes(_skillname)>>
        <<set $currentspeaker to ("@@.motorics.speaker;" + _skillname + "@@")>>
    <<elseif $intellect.includes(_skillname)>>
        <<set $currentspeaker to ("@@.intellect.speaker;" + _skillname + "@@")>>
    <<elseif $fysique.includes(_skillname)>>
        <<set $currentspeaker to ("@@.fysique.speaker;" + _skillname + "@@")>>
    <<elseif $psyche.includes(_skillname)>>
        <<set $currentspeaker to ("@@.psyche.speaker;" + _skillname + "@@")>>
    <</if>>
    /* if there's a fourth argument present (indicating a failure state), run the SkillCheck macro as per usual. Skillcheck's 6th argument checking whether it's a passive check is set to true.
    
    if SkillCheck passes/$success is true,
        set the skill rating to the _label determined by the <<Difficulties>> widget
    
    
    set the skill rating to the 2nd argument + Success [Easy: Success] and display the success info.
    if it fails, set the skill rating to the 2nd argument + Failure [Easy: Failure] and display the failure info.
    
    add the skill result to the current speaker: Logic [Easy: Success]
    then add a dash. */
    <<if $args[3]>>
        <<SkillCheck $args[1] $args[2] $args[4] $args[5] $args[6] true>>
        <<Difficulties $args[4]>>
        <<SkillCheck $args[1] $args[2] $args[3] $args[4] $args[5] true>>
        <<Difficulties $args[3]>>
        <<set _skillresult to (" [" + _label + ": ")>>
   <</if>>
   /*add the skill result to the current speaker: Logic [Easy: Success]*/
    <<if $args[1]>>
        <<SkillCheck $args[2] $args[3] $args[4] $args[5] $args[6] true>>
        <<SkillCheck $args[2] $args[3] $args[4] $args[5] $args[6] true>>
        <<if $success is true>>
            <<set _skillresult to (" [" + $args[1] + ": " + "Success" + "]")>>
            <<set $currentspeaker += _skillresult>>
            <<set $currentspeaker += " - ">>
            <<AddParagraph $args[1] $args[3]>>
            <<AddParagraph $args[2]>>
            <<AddParagraph $args[2]>>
            <<AddParagraph $args[1]>>
        <<else>>
            <<set _skillresult to (" [" + $args[1] + ": " + "Failure" + "]")>>
            <<set $currentspeaker += _skillresult>>
            <<set $currentspeaker += " - ">>
            <<AddParagraph $args[3]>>
        <</if>>
    <<else>>
        <<if $args[1]>>
            <<set _skillresult to (" [" + $args[1] + ": " + $args[2] + "]")>>
            <<set $currentspeaker += _skillresult>>
        <</if>>
        <<set $currentspeaker += " - ">>
    <</if>>
    /* Add a dash. */
<</widget>>