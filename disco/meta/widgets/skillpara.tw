:: skillpara [widget nobr]
/* represents the dialogue of passive skills, a unique set speaker. you need to include at least one argument. the passive check and flag arguments are optional.

ex:
skill speaking with no check
<<skillpara "Logic">>Logical statement.<<skillpara>>
    0 = name of skill

if it's a passive check:
<<skillpara "Logic" "trivial">>Succeful logic passive check<<skillpara>>
    1 = difficulty

if passing the passive check sets a flag to true:
<<skillpara "Logic" "trivial" "isThisLogical">>Successful logic passive check<<skillpara>>
    2 = flag to set
    3 = what to set it to (optional, defaults to true)
*/
<<widget "skillpara" container>>
<<silently>>
/* sets a temporary variable, _skillpara, which will be used for the DisplayPara widget */
    <<set _skillpara = "">>
    /* if $paraAppendMode (used for greentext) is true, add greentext, then clear the greentext and set it back to false. */
    <<if $paraAppendMode is true>>
        <<for _text range $greentext>>
            <<set _skillpara += _skilltext + "<br /><br />">>
        <</for>>
        <<set $greentext = []>>
        <<set $paraAppendMode = false>>
    <</if>>

    <<set _skillname = $args[0].toUpperCase()>>

    /*If the skill name is in the $motorics array, set _currentspeaker to the skill, styling it with the .motorics and .speaker classes. same with the others. set _usedSkill to the skill's appropriate stat for use with <<check>>
    */
    <<for _stat, _statArray range $stats>>
        <<if Object.keys(_statArray[0]).includes(_skillname) || _stat == "motorics" && $perceptions.includes(_skillname)>>
            <<set _currentspeaker = "@@." + _stat + ".speaker;" + _skillname + "@@">>
            <<set _usedSkill = _statArray[1] + _statArray[0][_skillname]>>
            <<set _usedOverlay to _stat>>
        <</if>>
    <</for>>

    /* if there's a 1st argument present (indicating a check), check to see if the skill is high enough [stat for now  until I build skills in].*/
    <<if $args[1]>>
            
        /* convert difficulty name to number */
        <<set _difficultyRating = $args[1].charAt(0).toUpperCase() + $args[1].slice(1)>>
        <<Difficulties _difficultyRating>>

       /* if check is over the stat used + 6, set the skill rating to the 2nd argument + Success [Easy: Success] and display the success content. otherwise it shows nothing*/
        <<if  (_usedSkill + 6) >= _rating>>
            <<set _skillresult = " [" + _args[1].charAt(0).toUpperCase() + _args[1].slice(1).toLowerCase() + ": Success ]">>
            <<set _skillpara += _currentspeaker + _skillresult + " - " + _contents>>
            <<overlay _usedOverlay>>
            /* if there's a flag */
            <<if $args[2]>>
                /* if the flag value is specified, set to that value */
                <<if $args[3]>>
                    <<flag _args[2] _args[3]>>
                /* otherwise set to true */
                <<elseif !$args[3]>>
                    <<flag _args[2]>>
                <</if>>
            <</if>>
            <<run $paragraphs.push(_skillpara)>>
       <</if>>

    /*if it's just a  normal skill comment with no passive*/
    <<elseif !$args[1]>>
        <<set _skillpara += _currentspeaker + " - " + _contents>>
        <<run $paragraphs.push(_skillpara)>>
    <</if>>

    /* set the current speaker to nothing (so a name doesn't keep appearing over and over */
    <<set _currentspeaker = "">>

<</silently>>
<</widget>>